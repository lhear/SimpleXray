plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose' version "${kotlin_version}"
    id 'com.google.protobuf' version '0.9.4'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.65.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}

def versionProps = new Properties()
file("$rootDir/version.properties").withInputStream { versionProps.load(it) }

android {
    namespace "com.simplexray.an"
    compileSdk 35

    defaultConfig {
        applicationId "com.simplexray.an"
        versionCode versionProps.APP_VERSION_CODE.toInteger()
        versionName versionProps.APP_VERSION_NAME
        ndk {
            abiFilters "arm64-v8a", "x86_64"
        }
        externalNativeBuild {
            ndkBuild {
                arguments "APP_CFLAGS+=-DPKGNAME=com/simplexray/an -ffile-prefix-map=${rootDir}=."
                arguments "APP_LDFLAGS+=-Wl,--build-id=none"
            }
        }
        targetSdk 35
        minSdk 29
    }

    signingConfigs {
        release {
            enableV1Signing false
            enableV2Signing false
            enableV3Signing true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles(
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            )
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    def propsFile = rootProject.file('store.properties')
    def configName = 'release'

    if (propsFile.exists() && signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props != null && props.containsKey('storeFile')) {
            signingConfigs.named(configName).configure {
                storeFile = rootProject.file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }
    ndkVersion versionProps.NDK_VERSION
    kotlinOptions {
        jvmTarget = '1.8'
    }

    splits {
        abi {
            enable true
            reset()
            include "arm64-v8a", "x86_64"
            universalApk true
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.each { output ->
            def abiFilter = output.getFilter("ABI")
            if (abiFilter != null) {
                output.outputFileName = "simplexray-${abiFilter}.apk"
            } else {
                output.outputFileName = "simplexray-universal.apk"
            }
        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    sourceSets {
        main {
            java {
                srcDirs 'src/main/java', 'build/generated/source/proto/main/java'
            }
            kotlin {
                srcDirs 'src/main/kotlin', 'build/generated/source/proto/main/grpckt'
            }
        }
    }
}

dependencies {
    implementation "io.grpc:grpc-okhttp:1.74.0"
    implementation "io.grpc:grpc-protobuf:1.74.0"
    implementation "io.grpc:grpc-stub:1.74.0"
    implementation "io.grpc:grpc-kotlin-stub:1.4.3"

    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.core:core-ktx:1.16.0'

    implementation platform('androidx.compose:compose-bom:2025.07.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.ui:ui-tooling-preview-android'
    implementation 'androidx.activity:activity-compose'
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation 'androidx.navigation:navigation-compose-android:2.9.2'

    implementation 'com.github.nanihadesuka:LazyColumnScrollbar:2.2.0'
    implementation 'sh.calvin.reorderable:reorderable:2.5.1'
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
}
